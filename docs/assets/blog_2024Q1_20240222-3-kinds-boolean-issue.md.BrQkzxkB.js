import{_ as s,a as n,p as a,e as t,t as o,a3 as p,o as i}from"./chunks/framework.8_iCw7Np.js";const _=JSON.parse('{"title":"3 kinds Boolean support in ApiHug framework","description":"bool should has 2 flag, but 3 design ways really freak out.","frontmatter":{"title":"3 kinds Boolean support in ApiHug framework","description":"bool should has 2 flag, but 3 design ways really freak out."},"headers":[],"relativePath":"blog/2024Q1/20240222-3-kinds-boolean-issue.md","filePath":"blog/2024Q1/20240222-3-kinds-boolean-issue.md","lastUpdated":1714795370000}'),l={name:"blog/2024Q1/20240222-3-kinds-boolean-issue.md"},r={id:"frontmatter-title",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),c=p(`<p><strong>proto primitive</strong>:</p><div class="language-proto3 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">proto3</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>//Define</span></span>
<span class="line"><span>bool flag =1;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Assign</span></span>
<span class="line"><span>flag: true;</span></span></code></pre></div><p><strong>proto wrapper</strong>:</p><div class="language-proto3 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">proto3</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>//Define</span></span>
<span class="line"><span>google.protobuf.BoolValue flag = 1;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Assign</span></span>
<span class="line"><span>flag: {</span></span>
<span class="line"><span>    value: true;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p><strong>ApiHug Enum</strong>:</p><div class="language-proto3 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">proto3</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>//Define</span></span>
<span class="line"><span>hope.common.BoolType flag = 1;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//Assign</span></span>
<span class="line"><span>flag: TRUE;</span></span></code></pre></div><h2 id="why" tabindex="-1">Why <a class="header-anchor" href="#why" aria-label="Permalink to &quot;Why&quot;">​</a></h2><table><thead><tr><th>ApiHug</th><th>pros</th><th>cons</th><th>Comment</th></tr></thead><tbody><tr><td>Proto Primitive</td><td>straightforward</td><td>default always false</td><td>as no default or optional present since proto3</td></tr><tr><td>Proto Wrapper</td><td>support not set</td><td>syntax a bit complex</td><td>when assign you need a message wrapper</td></tr><tr><td>ApiHug Enum</td><td>straightforward</td><td>introduce depend on ApiHug Lib</td><td>only used in meta generation no affect on application layer</td></tr></tbody></table><h2 id="rule" tabindex="-1">Rule <a class="header-anchor" href="#rule" aria-label="Permalink to &quot;Rule&quot;">​</a></h2><p>Since ApiHug Lib <code>0.6.0-RELEASE</code> and IDE Plugin version <code>0.2.0</code>，avoid the usage of of Proto&#39;s primitive &amp; wrapper ways, use ApiHug Enum as mandatory.</p><p>Otherwise the IDE plugin can not parse the AST tree, any bool dependent flag can not be picked up.</p><h2 id="refer" tabindex="-1">Refer <a class="header-anchor" href="#refer" aria-label="Permalink to &quot;Refer&quot;">​</a></h2><ol><li><a href="https://medium.com/swlh/avoid-null-booleans-in-java-4a5cd9b23bca" target="_blank" rel="noreferrer">Avoid Null Booleans in Java</a></li><li><a href="https://en.wikipedia.org/wiki/Boolean_algebra" target="_blank" rel="noreferrer">Wikipedia: Boolean algebra</a></li><li><a href="https://en.wikipedia.org/wiki/Three-valued_logic" target="_blank" rel="noreferrer">wikipedia: Three-valued logic</a></li></ol>`,13);function h(e,u,g,f,b,m){return i(),n("div",null,[a("h1",r,[t(o(e.$frontmatter.title)+" ",1),d]),c])}const v=s(l,[["render",h]]);export{_ as __pageData,v as default};
