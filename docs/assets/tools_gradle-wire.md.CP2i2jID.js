import{_ as s,a as e,p as t,e as a,t as n,a3 as d,o as l}from"./chunks/framework.8_iCw7Np.js";const m=JSON.parse('{"title":"ApiHug Gradle Wire Command","description":"How ApiHug Wire gradle task work","frontmatter":{"title":"ApiHug Gradle Wire Command","description":"How ApiHug Wire gradle task work"},"headers":[],"relativePath":"tools/gradle-wire.md","filePath":"tools/gradle-wire.md","lastUpdated":null}'),o={name:"tools/gradle-wire.md"},h={id:"frontmatter-title",tabindex:"-1"},p=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),r=d(`<div class="warning custom-block"><p class="custom-block-title">TBD</p><p>May be a bit out of date ⚠️⚠️⚠️</p></div><p><code>Wire</code> specific for the proto kind module, it used to compile the proto definition to neutral result.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p>Please refer to: <a href="https://github.com/apihug/apihug-full-demo/tree/main/demo-user-proto" target="_blank" rel="noreferrer">apihug-full-demo demo-user-proto</a> gradle <a href="https://github.com/apihug/apihug-full-demo/blob/main/demo-user-proto/build.gradle" target="_blank" rel="noreferrer">build.gradle</a>:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java-library&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hopeWire)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hopeWire {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keepProto </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verbose </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Meta information <a href="https://github.com/apihug/apihug-full-demo/blob/main/demo-user-proto/src/main/resources/hope-wire.json" target="_blank" rel="noreferrer">hope-wire.json</a>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;packageName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.apihug.demo.user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo-user-proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo-user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;domain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;persistence&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;identifyType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;tenantType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LONG&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;authority&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;enumClass&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.apihug.demo.user.proto.infra.settings.UserAuthorityEnum&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;codePrefix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10240000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;createdAt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2024-02-29&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;createdBy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dell&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;openapi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;contact&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;developer@apihug.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/apihug/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;developer@apihug.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;externalDocs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hope is the best thing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://github.com/apihug/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;tags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : [ {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sample&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sample Tag&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Gradle <code>hopeWire</code> Configuration details:</p><table><thead><tr><th>Argument</th><th>Description</th><th>Type</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>disable</td><td>Plugin debugging</td><td><code>boolean</code></td><td><code>false</code></td><td>After dependency injection is complete, do not add additional tasks, for debugging and testing purposes</td></tr><tr><td>smock</td><td>Plugin debugging</td><td><code>boolean</code></td><td><code>false</code></td><td>After the above step is complete + Task injection is finished, do not execute the final generation action, for debugging and testing purposes</td></tr><tr><td>debug</td><td>Plugin debugging</td><td><code>boolean</code></td><td><code>false</code></td><td>After the above steps are complete + the first stage of the generation action is prepared, do not finally trigger the action, for debugging and testing purposes</td></tr><tr><td>restrict</td><td>Implicit conversion for non-extensible types</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether <code>google.protobuf.Timestamp</code> is supported for default conversion to local time</td></tr><tr><td>verbose</td><td>Enable execution process log</td><td><code>boolean</code></td><td><code>false</code></td><td>Enable full log for debugging when there are issues</td></tr><tr><td>generatedVersion</td><td>Include generated plugin version</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to include the plugin version in the <code>@Generated</code> annotation of the generated code</td></tr><tr><td>generatedTime</td><td>Include generation timestamp</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to include the generation timestamp in the <code>@Generated</code> annotation of the generated code</td></tr><tr><td>pluginMainVersion</td><td>Plugin auxiliary version</td><td><code>String</code></td><td></td><td>The version dependency of the wire plugin at runtime, do not set unless necessary. The Apihug overall package is released with BOM, and this version should not be manually set</td></tr><tr><td>pluginMainClass</td><td>Plugin auxiliary entry Main</td><td><code>String</code></td><td></td><td>Do not set unless the plugin is extended</td></tr><tr><td>local</td><td>Local plugin</td><td><code>boolean</code></td><td><code>false</code></td><td>Set if you are extending the plugin yourself, otherwise do not set</td></tr><tr><td>protocVersion</td><td>Protoc version</td><td><code>String</code></td><td></td><td>Supplied by Wire at the time of release, can be defined by oneself (may lead to incompatibility risks)</td></tr><tr><td>grpcVersion</td><td>GRPC version</td><td><code>String</code></td><td></td><td>Supplied by Wire at the time of release, can be defined by oneself (may lead to incompatibility risks)</td></tr><tr><td>keepProto</td><td>Include original compiled proto files</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether to carry the results of protoc compilation when the wire project is released, it should be limited to the POJO layer unless there is a deep logical dependency between projects</td></tr><tr><td>wireProtoBufGradlePluginVersion</td><td>Protobuf plugin version</td><td><code>String</code></td><td></td><td>Not enabled</td></tr><tr><td>validationVersion</td><td>Validation version</td><td><code>String</code></td><td></td><td>Not enabled</td></tr><tr><td>swaggerVersion</td><td>Swagger version</td><td><code>String</code></td><td></td><td>Not enabled</td></tr></tbody></table><p>Meta configuration <code>resources\\hope-wire.json</code>:</p><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>(Default)</th><th>Remarks</th></tr></thead><tbody><tr><td>packageName</td><td>Package Name</td><td><code>String</code></td><td>Required</td><td>Project package name, must conform to Java package naming conventions, cannot contain reserved keywords: <code>wire</code>, <code>stub</code></td></tr><tr><td>name</td><td>Project Name</td><td><code>String</code></td><td>Required</td><td>Project identifier, must conform to artifact ID, lowercase, Chinese characters, example with a proto suffix: user-info-proto</td></tr><tr><td>application</td><td>Application Project</td><td><code>String</code></td><td>Required</td><td>The name of the project that matches the proto, usually the <code>name</code> without the <code>proto</code> suffix, example: user-info</td></tr><tr><td>module</td><td>Module Name</td><td><code>String</code></td><td>Required</td><td>Used for service locator at runtime to locate, if not set, <code>name</code> is used instead, the combination of domain+module must be unique at runtime</td></tr><tr><td>domain</td><td>Domain Name</td><td><code>String</code></td><td>Required</td><td>The domain it belongs to</td></tr><tr><td>description</td><td>Description</td><td><code>String</code></td><td>Optional</td><td>Description</td></tr><tr><td>persistence.identifyType</td><td>Database, Account Type</td><td><code>String</code></td><td>Optional</td><td>Data design, enabled when there is an account ID identifier, STRING|INTEGER|LONG</td></tr><tr><td>persistence.tenantType</td><td>Database, Tenant Type</td><td><code>String</code></td><td>Optional</td><td>Data design, enabled when there is a multi-tenant identifier, STRING|INTEGER|LONG</td></tr><tr><td>authority.enumClass</td><td>Authority, Permission Type Enum</td><td><code>String</code></td><td>Optional</td><td>Authority design, permission enumeration class, must be defined in the proto, checked at compile time</td></tr><tr><td>authority.codePrefix</td><td>Authority, Permission Code Prefix</td><td><code>Long</code></td><td>Optional</td><td>Authority design, for multi-module setups, permission code segment to avoid overlap, example: 100000 for <code>user</code> permission range, 100001 for the first</td></tr></tbody></table><h2 id="run" tabindex="-1">Run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;Run&quot;">​</a></h2><p>Every Auto generated project include a detail <code>README</code> example: <a href="https://github.com/apihug/apihug-full-demo/blob/main/README.md" target="_blank" rel="noreferrer">README</a>, include detail instruction how to use it.</p><h3 id="build-all" tabindex="-1">Build All <a class="header-anchor" href="#build-all" aria-label="Permalink to &quot;Build All&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wireTest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stubTest</span></span></code></pre></div><h3 id="build-individual-module" tabindex="-1">Build Individual Module <a class="header-anchor" href="#build-individual-module" aria-label="Permalink to &quot;Build Individual Module&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {YOUR_MODULE}:clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wire</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wireTest</span></span></code></pre></div>`,18);function k(i,c,u,g,E,y){return l(),e("div",null,[t("h1",h,[a(n(i.$frontmatter.title)+" ",1),p]),r])}const C=s(o,[["render",k]]);export{m as __pageData,C as default};
