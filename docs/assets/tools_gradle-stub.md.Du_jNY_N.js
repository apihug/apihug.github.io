import{_ as i,a as s,p as t,e as a,t as d,a3 as n,o}from"./chunks/framework.8_iCw7Np.js";const f=JSON.parse('{"title":"ApiHug Gradle Stub Command","description":"How ApiHug Stub gradle task work","frontmatter":{"title":"ApiHug Gradle Stub Command","description":"How ApiHug Stub gradle task work"},"headers":[],"relativePath":"tools/gradle-stub.md","filePath":"tools/gradle-stub.md","lastUpdated":null}'),r={name:"tools/gradle-stub.md"},l={id:"frontmatter-title",tabindex:"-1"},p=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),h=n(`<div class="warning custom-block"><p class="custom-block-title">TBD</p><p>May be a bit out of date ⚠️⚠️⚠️</p></div><p><code>Stub</code> used to generate the template implement code, and 3rd party dependencies integrated.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><p>Please refer to <a href="https://github.com/apihug/apihug-full-demo/blob/main/demo-user/build.gradle" target="_blank" rel="noreferrer">apihug-full-demo demo-user/build.gradle</a>:</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">springBoot)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">springDependency)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hopeStub)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias(libs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">liquibase)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hopeStub {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    debug </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Meta information <a href="https://github.com/apihug/apihug-full-demo/blob/main/demo-user/src/main/resources/hope-stub.json" target="_blank" rel="noreferrer">apihug-full-demo demo-user/hope-stub.json</a>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;packageName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.apihug.demo.user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo-user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;domain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;artifact&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;groupId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.apihug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;artifactId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo-user-proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1.1-SNAPSHOT&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo-user-proto&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;domain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;applied&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p><code>hopeStub</code> Configuration:</p><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>(Default)</th><th>Remarks</th></tr></thead><tbody><tr><td>debug</td><td>Plugin Debugging</td><td><code>boolean</code></td><td><code>false</code></td><td>Exit after configuration check, without completing any code generation</td></tr><tr><td>verbose</td><td>Enable Execution Log</td><td><code>boolean</code></td><td><code>false</code></td><td>Open full log for debugging when issues arise</td></tr><tr><td>generatedVersion</td><td>Include Plugin Version</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether the <code>@Generated</code> annotation in the generated code includes the plugin version</td></tr><tr><td>generatedTime</td><td>Include Generation Timestamp</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether the <code>@Generated</code> annotation in the generated code includes the generation timestamp</td></tr><tr><td>pluginMainVersion</td><td>Plugin Auxiliary Version</td><td><code>String</code></td><td></td><td>The version dependency of the wire plugin at runtime, do not set unless necessary. Apihug&#39;s overall package is released with BOM, and this version should not be manually set</td></tr><tr><td>pluginMainClass</td><td>Plugin Auxiliary Main Entry</td><td><code>String</code></td><td></td><td>Do not set unless the plugin is extended</td></tr><tr><td>enableFrontVue</td><td>Generate Front Vue Scaffolding</td><td><code>boolean</code></td><td><code>false</code></td><td>Experimental stage</td></tr><tr><td>adminStub</td><td>Generate Admin Management Code</td><td><code>boolean</code></td><td><code>false</code></td><td>Not enabled</td></tr></tbody></table><p>Meta configuration <code>resources\\hope-stub.json</code>:</p><ol><li>Self-service Protocol Definition Dependencies: In the <code>proto</code> configuration, define dependencies for a single self-service protocol.</li><li>Third-party Service Protocol Definition Dependencies: In the <code>dependencies</code>, understand as dependencies on other microservices, which can be multiple.</li><li>Artifact Section: If dependencies have already been introduced in various ways through dependencies in your own <code>build.gradle</code>, this section is not necessary. Incorrect configurations can lead to compilation errors and may cause runtime errors! ⚠️⚠️⚠️ <ol><li>The dependencies of the service protocol <code>proto</code> package can be controlled through standard Gradle dependencies.</li><li>Dependencies can also be managed by configuring in the <code>resources\\hope-stub.json</code> file, and the plugin will handle it for you.</li><li>Maintain a unified approach and avoid mixing usage, as this can make problem location troublesome.</li></ol></li></ol><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>(Default)</th><th>Remarks</th></tr></thead><tbody><tr><td>packageName</td><td>Package Name</td><td><code>String</code></td><td>Required</td><td>Project package name, must conform to Java package naming conventions, cannot contain reserved keywords: <code>wire</code>, <code>stub</code></td></tr><tr><td>name</td><td>Project Name</td><td><code>String</code></td><td>Required</td><td>Project identifier, must conform to artifact ID, lowercase, Chinese characters, e.g., user-info, corresponds to the application of the proto project</td></tr><tr><td>domain</td><td>Domain</td><td><code>String</code></td><td>Required</td><td>The domain it belongs to</td></tr><tr><td>proto.artifact.groupId</td><td>Self-service Proto Group ID</td><td><code>String</code></td><td>Optional</td><td>Self-service, dependency package group ID</td></tr><tr><td>proto.artifact.artifactId</td><td>Self-service Proto Artifact ID</td><td><code>String</code></td><td>Optional</td><td>Self-service, dependency package artifact ID</td></tr><tr><td>proto.artifact.version</td><td>Self-service Proto Version</td><td><code>String</code></td><td>Optional</td><td>Self-service, dependency package version</td></tr><tr><td>proto.module</td><td>Self-service Proto Module</td><td><code>String</code></td><td>Required</td><td>Used for service locator at runtime to locate, <strong>if not set</strong>, <code>proto.artifact.artifactId</code> is used instead</td></tr><tr><td>proto.domain</td><td>Self-service Proto Domain</td><td><code>String</code></td><td>Optional</td><td><strong>If not set</strong>, it is the same as the main project domain</td></tr><tr><td>proto.applied</td><td>Self-service Proto Included</td><td><code>boolean</code></td><td>Required</td><td>Whether it has been included, if already included in <code>gradle &gt; dependencies</code>, the plugin will not include the lib again</td></tr><tr><td>dependencies.artifact.groupId</td><td>Third-party Service Proto Group ID</td><td><code>String</code></td><td>Optional</td><td>Third-party service, dependency package group ID</td></tr><tr><td>dependencies.artifact.artifactId</td><td>Third-party Service Proto Artifact ID</td><td><code>String</code></td><td>Optional</td><td>Third-party service, dependency package artifact ID</td></tr><tr><td>dependencies.artifact.version</td><td>Third-party Service Proto Version</td><td><code>String</code></td><td>Optional</td><td>Third-party service, dependency package version</td></tr><tr><td>dependencies.module</td><td>Third-party Service Proto Module</td><td><code>String</code></td><td>Required</td><td>Third-party service, module name, <strong>if not set</strong>, it should be consistent with <code>artifact.artifactId</code></td></tr><tr><td>dependencies.domain</td><td>Third-party Service Proto Domain</td><td><code>String</code></td><td>Required</td><td>Third-party service, domain</td></tr><tr><td>dependencies.applied</td><td>Third-party Service Proto Included</td><td><code>boolean</code></td><td><code>false</code></td><td>Whether it has been included, if already included in <code>gradle &gt; dependencies</code>, the plugin will not include the lib again</td></tr></tbody></table><h2 id="run" tabindex="-1">Run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;Run&quot;">​</a></h2><p>Every Auto generated project include a detail <code>README</code> example: <a href="https://github.com/apihug/apihug-full-demo/blob/main/README.md" target="_blank" rel="noreferrer">README</a>, include detail instruction how to use it.</p><p>NOT like <a href="./gradle-wire">Wire</a> which integrate with gradle&#39;s default compile task, <strong>stub</strong> must run manually as you manually trigger it:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gradlew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {YOUR_MODULE}:clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stubTest</span></span></code></pre></div>`,17);function c(e,k,u,g,E,y){return o(),s("div",null,[t("h1",l,[a(d(e.$frontmatter.title)+" ",1),p]),h])}const b=i(r,[["render",c]]);export{f as __pageData,b as default};
